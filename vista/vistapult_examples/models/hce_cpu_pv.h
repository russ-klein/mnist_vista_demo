
/**************************************************************/
/*                                                            */
/*               Copyright (c) Siemens 2021                   */
/*                  All Rights Reserved                       */
/*                                                            */
/*       THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY      */
/*         INFORMATION WHICH IS THE PROPERTY OF SIEMENS       */
/*             CORPORATION OR ITS LICENSORS AND IS            */
/*                 SUBJECT TO LICENSE TERMS.                  */
/*                                                            */
/**************************************************************/

//*<
//* Generated By Model Builder, Mentor Graphics Computer Systems, Inc.
//*
//* This file contains the PV class for hce_cpu.
//* This is a template file: You may modify this file to implement the 
//* behavior of your component. 
//* 
//* Model Builder version: 5.1.0
//* Generated on: Mar. 06, 2022 07:21:12 PM, (user: russk)
//*>


#pragma once
#include "hce_cpu_model.h"
#include "defines.h"

using namespace tlm;

//This class inherits from the hce_cpu_pv_base class
class hce_cpu_pv : public hce_cpu_pv_base {
 public:
  typedef esl::tlm_types::Address mb_address_type;
 public:
  // Constructor
  // Do not add parameters here.
  // To add parameters - use the Model Builder form (under PV->Parameters tab)
  SC_HAS_PROCESS(hce_cpu_pv);
  hce_cpu_pv(sc_core::sc_module_name module_name);

 protected:
  // SC_THREAD created for CPU
  void thread();        

 protected:
  ////////////////////////////////////////
  // signals callbacks
  //////////////////////////////////////// 
  void int_source_callback(); 

 public:
  typedef ac_fixed<32,16,true> hw_cat_type;

 private:
  void dma_stimulus();
  void check_results();
  unsigned int read_word(unsigned int address);
  void write_word(unsigned int address, unsigned int data);
  void handle_bus_cycles(int a, int b);
  
#include "hce_function_decl.h"
};

